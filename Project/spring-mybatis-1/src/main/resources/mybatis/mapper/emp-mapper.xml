<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.dao.EmpDao">

	<!-- 
	public int insert(Emp emp);
 	-->

	<!-- 
		수정 쿼리인 경우, 메소드의 리턴 값으로 영향받은 로우의 개수를 마이바티스 알아서 처리한다.
		insert/update/delete 수행결과인 영향받은 로우의 개수 값은 자동으로 리턴된다.
	 -->
	<insert id="insert" >
		insert into EMP (ename, job, sal) values (#{ename},#{job},#{sal})
		
		<selectKey order="AFTER" keyProperty="empno" resultType="int" >
			select LAST_INSERT_ID() as empno
		</selectKey>
	</insert>
	
	<!-- 
	public int update(Emp emp);
	 -->
	<update id="update">
		update EMP set ename=#{ename}, job=#{job}, sal=#{sal} where empno=#{empno}
	</update>
	
	<!-- 
	public int delete(int empno);
	인트여도 알아서 처리 파마미터명을 써주면 됌 
 	-->
	
	<delete id="delete">
		delete from EMP where empno= #{empno}
	</delete>
	
	<!-- public List<Emp> findAll(); -->
	<!-- 조회쿼리 / 리턴자료형 써줘야함  -->
	<select id="findAll" resultMap= "empRowMapper">
					<!-- resultType="com.example.demo.domain.Emp" -->
		select * from emp order by empno asc
	</select>

	<!-- public int count();  -->
	<select id="count" resultType="int">
		select count(*) from emp
	</select>
	
	<!-- public Emp findOne(int empno) -->
	<select id="findOne" resultType="Emp">
		select * from emp where empno=#{empno}
	</select>
	
	<!-- 
	   @Results(id="empRowMapper", value={ 
       @Result(property="empno", column="empno"),
       @Result(property="ename", column="ename"),
       @Result(property="job", column="job"),
       @Result(property="sal", column="sal")
   		})
	 -->
	<resultMap type="Emp" id="empRowMapper">
		<result property="empno" column="empno"/>
		<result property="ename" column="ename"/>
		<result property="job" column="job"/>
		<result property="sal" column="sal"/>
	</resultMap>
	
</mapper>